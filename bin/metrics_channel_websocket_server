#!/usr/bin/env ruby

# The websocket server listens to metrics published on the various per-period
# exchanges and re-publishes the requested metric (via the query parameter
# "metric") to any connected clients as JSON.
#
# For example a websocket connection can be made to receive Bytes_sent.rate:
#   ws://localhost:8080/?metric=Bytes_sent.rate
#
# What is done with the metrics then is entirely up to the receiver. 

require "metrics_channel"
require "em-websocket"
require "json"
require "pp"

EventMachine::WebSocket.start(:host => "0.0.0.0", :port => 8080) do |ws|
  EventMachine.set_quantum(10)

  channel = MetricsChannel::Channel.new("amqp://localhost")
  channel.establish_queue

  ws.onopen do
    puts "WebSocket opened!"
    pp ws.request
    puts
  
    [100, 1000, 60000].each do |period|
      channel.subscribe_period(period, "all", :class => "host")
    end

    channel.receive do |metadata, metrics|
      #puts "Message from route #{metadata.routing_key}"
      if metrics
        if metric = metrics.data[ws.request["query"]["metric"]]
          ws.send JSON.dump({ :time => metrics.time, :data => metric[:value] })
        end
      end
    end
  end

  ws.onclose do
    puts "WebSocket closed"
    channel.close { }
  end
end